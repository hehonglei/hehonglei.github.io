<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>可了头i的博客</title>
 <link href="http://127.0.0.1/atom.xml" rel="self"/>
 <link href="http://127.0.0.1/"/>
 <updated>2016-11-05T21:11:42+08:00</updated>
 <id>http://127.0.0.1</id>
 <author>
   <name>Rizky Ariestiyansyah</name>
   <email>ariestiyansyah.rizky@gmail.com</email>
 </author>

 
 <entry>
   <title>微信支付流程!</title>
   <link href="http://127.0.0.1/naringu/2014/06/12/wei/"/>
   <updated>2014-06-12T00:00:00+08:00</updated>
   <id>http://127.0.0.1/naringu/2014/06/12/wei</id>
   <content type="html">&lt;p&gt;支付模式&lt;/p&gt;

&lt;p&gt;刷卡支付：刷卡支付是用户展示微信钱包内的“刷卡条码/二维码”给商户系统扫描后直接完成支付的模式。主要应用线下面对面收银的场景。&lt;/p&gt;

&lt;p&gt;扫码支付：扫码支付是商户系统按微信支付协议生成支付二维码，用户再用微信“扫一扫”完成支付的模式。该模式适用于PC网站支付、实体店单品或订单支付、媒体广告支付等场景。&lt;/p&gt;

&lt;p&gt;公众号支付是用户在微信中打开商户的H5页面，商户在H5页面通过调用微信支付提供的JSAPI接口调起微信支付模块完成支付。应用场景有：
1) 用户在微信公众账号内进入商家公众号，打开某个主页面，完成支付
2) 用户的好友在朋友圈、聊天窗口等分享商家页面连接，用户点击链接打开商家页面，完成支付
3) 将商户页面转换成二维码，用户扫描二维码后在微信浏览器中打开页面后完成支付&lt;/p&gt;

&lt;p&gt;APP支付：APP支付又称移动端支付，是商户通过在移动端应用APP中集成开放SDK调起微信支付模块完成支付的模式。&lt;/p&gt;

&lt;p&gt;1.获取订单信息&lt;/p&gt;

&lt;p&gt;2.根据订单信息和支付相关的账号生成sign，并且生成支付参数&lt;/p&gt;

&lt;p&gt;3.将支付参数信息POST到微信服务器，获取返回信息&lt;/p&gt;

&lt;p&gt;4.根据返回信息生成相应的支付代码（微信内部）或是支付二维码（非微信内），完成支付。&lt;/p&gt;

&lt;p&gt;下面分步骤的讲一下：&lt;/p&gt;

&lt;p&gt;1.微信支付中相关的必须的订单参数有三个，分别是：body(商品名或订单描述),out_trade_no（一般为订单号）和total_fee（订单金额，单位“分”，要注意单位问题），在不同的应用中，首先要做的就是获取订单中的相关信息，为支付参数生成做准备。&lt;/p&gt;

&lt;p&gt;2.其他必须的支付参数有 appid（微信appid），mch_id（申请成功后告知）,device_info(web端和微信端该参数都是统一的，为大写的”WEB“)，trade_type（根据使用场景不同，该值也是不同的，微信外部为”NATIVE“，微信内部为”JSAPI“）,nonce_str(32位随机字符串),spbill_create_ip（发起支付的终端IP，即服务器IP），notify_url（支付回调地址，微信服务器通知网站支付完成与否，修改订单状态），sign（签名），还有一个需要说明的地方，如果trade_type为JSAPI的话，openid为必填的参数。&lt;/p&gt;

&lt;p&gt;签名算法是比较容易出错的地方，在于签名步骤繁琐，其实很关键的是，sign不参与签名&lt;/p&gt;

&lt;p&gt;A：将1、2中提到的除sign外的参数赋值，放到一个数组array里面，按照字典顺序排序，其实就是键值按照A—Z的顺序进行排序。&lt;/p&gt;

&lt;p&gt;B：将数组转换成字符串string，格式为 k1=v1&amp;amp;k2=v2&amp;amp;…kN=vN&lt;/p&gt;

&lt;p&gt;C：在此string后加上KEY值（在微信支付商户后台用户自己设定的）现在string = k1=v1&amp;amp;k2=v2&amp;amp;…kN=vN&amp;amp;key=KEY。&lt;/p&gt;

&lt;p&gt;D：string = md5(string)&lt;/p&gt;

&lt;p&gt;E: sign = strtoupper(string)&lt;/p&gt;

&lt;p&gt;至此，sign生成完毕。&lt;/p&gt;

&lt;p&gt;将sign添加到array数组里面生成新的数组。将该数组转换为XML。至此，微信支付的参数准备工作完成。&lt;/p&gt;

&lt;p&gt;3.将2中生成的XML，使用POST的方式发送请求到微信（https://api.mch.weixin.qq.com/pay/unifiedorder），获取返回的XML信息，将该信息转换成数组格式方便操作。返回的XML信息如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;return_code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CDATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SUCCESS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/return_code&amp;gt;
   &amp;lt;return_msg&amp;gt;&amp;lt;![CDATA[OK]]&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;return_msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;appid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CDATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wx2421b1c4370ec43b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/appid&amp;gt;
   &amp;lt;mch_id&amp;gt;&amp;lt;![CDATA[10000100]]&amp;gt;&amp;lt;/m&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ch_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonce_str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CDATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;IITRi8Iabbblz1Jc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/nonce_str&amp;gt;
   &amp;lt;sign&amp;gt;&amp;lt;![CDATA[7921E432F65EB8ED0CE9755F0E86D72F]]&amp;gt;&amp;lt;/si&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result_code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CDATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SUCCESS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/result_code&amp;gt;
   &amp;lt;prepay_id&amp;gt;&amp;lt;![CDATA[wx201411101639507cbf6ffd8b0779950874]]&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prepay_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trade_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CDATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;JSAPI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/trade_type&amp;gt;
&amp;lt;/xm&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果是trade_type==native支付的话，还会多一个参数code_url，该URL为微信扫码支付的地址。&lt;/p&gt;

&lt;p&gt;4.下面就是支付的过程了。&lt;/p&gt;

&lt;p&gt;如果trade_type==native，那么使用一些方式将code_url转换成二维码，使用微信扫码就可以了，如果是微信内部点击支付的话，需要调用微信js-sdk中的相关东西，这一步中最关键是生成一个json格式的字符串。&lt;/p&gt;

&lt;p&gt;首先要生成转换json字符串的数组array_jsapi。&lt;/p&gt;

&lt;p&gt;A：该数组的参数包括：appId，timeStamp,nonceStr,package,signType(默认为”MD5“)，要注意大小写和上面的数组里面是不一样的。&lt;/p&gt;

&lt;p&gt;B：使用该数组生成paySign参数，签名方式同上。&lt;/p&gt;

&lt;p&gt;C：将paySign参数追加到array_jsapi数组中。&lt;/p&gt;

&lt;p&gt;D：将该数组使用json_encode格式化为字符串js_string。&lt;/p&gt;

&lt;p&gt;完成上面的工作，就可以在微信内部进行支付了。&lt;/p&gt;

&lt;p&gt;下面为相关支付的示例代码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;text/javascript&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsApiCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;no&quot;&gt;WeixinJSBridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;invoke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&#39;getBrandWCPayRequest&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;vg&quot;&gt;$js_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;WeixinJSBridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;err_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;err_msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;get_brand_wcpay_request:ok&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;支付成功&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;支付失败&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callpay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WeixinJSBridge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;undefined&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addEventListener&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;WeixinJSBridgeReady&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsApiCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attachEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attachEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;WeixinJSBridgeReady&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsApiCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attachEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;onWeixinJSBridgeReady&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsApiCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;jsApiCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;代码中js_string即为我们生成的字符串。&lt;/p&gt;

&lt;p&gt;HTML代码中调用callpay()函数发起支付。&lt;/p&gt;

&lt;p&gt;这样微信支付的支付工作就完成了。&lt;/p&gt;

&lt;p&gt;下面是回调工作，该功能确保订单支付成功后，有正确的状态显示给用户。&lt;/p&gt;

&lt;p&gt;支付完成后，微信使用POST请求，将支付结果反馈给网站服务器，网站服务器获取POST信息，根据支付成功与否，来确定是否修改订单信息。&lt;/p&gt;

&lt;p&gt;A：将POST参数中的sign去除，并且记录下来该值。&lt;/p&gt;

&lt;p&gt;B：对剩余的参数进行签名&lt;/p&gt;

&lt;p&gt;C：将签名结果和POST中的sign进行比对，相同说明签名正确，根据支付结果修改订单状态。&lt;/p&gt;

&lt;p&gt;E：返回XML信息给微信，确保微信知道网站已经收到该通知，避免微信再次推送POST，示例如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;return_code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CDATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SUCCESS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/return_code&amp;gt;
  &amp;lt;return_msg&amp;gt;&amp;lt;![CDATA[OK]]&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;return_msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/xml&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果失败，则返回&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;return_code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CDATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;FAIL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/return_code&amp;gt;
  &amp;lt;return_msg&amp;gt;&amp;lt;![CDATA[失败原因]]&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;return_msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/xml&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;至此，微信支付的整个开发介绍完毕。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>面向对象!</title>
   <link href="http://127.0.0.1/naringu/2014/06/12/three/"/>
   <updated>2014-06-12T00:00:00+08:00</updated>
   <id>http://127.0.0.1/naringu/2014/06/12/three</id>
   <content type="html">&lt;p&gt;面向对象是一种计算机编程架构，比面向过程具有更强的灵活性和扩展性。&lt;/p&gt;

&lt;p&gt;1)主流软件开发语言离不开面向对象&lt;/p&gt;

&lt;p&gt;2)主流网站开发语言离不开面向对象&lt;/p&gt;

&lt;p&gt;3)工作中需要，企业招聘有些明确要求掌握面向对象编程&lt;/p&gt;

&lt;p&gt;4)主流php框架都是面向对象编程方式实现(如ThinkPHP,CI,YII,Zend framework等)&lt;/p&gt;

&lt;p&gt;2.面向对象（OO）包括3部分内容&lt;/p&gt;

&lt;p&gt;1)面向对象分析（Object Oriented Analysis,OOA）
2)面向对象设计（Object Oriented Design,OOD）
3)面向对象编程（Object Oriented Programming,OOP）,这是我们常说的面向对象编程。&lt;/p&gt;

&lt;p&gt;3.类和对象&lt;/p&gt;

&lt;p&gt;1）类：具有相同属性和方法的事物的集合，是抽象的。&lt;/p&gt;

&lt;p&gt;类的组成：&lt;/p&gt;

&lt;p&gt;属性（也称变量或成员变量）&lt;/p&gt;

&lt;p&gt;方法（类中的函数被称为方法或成员方法）&lt;/p&gt;

&lt;p&gt;常量  (无法更改或撤销定义)&lt;/p&gt;

&lt;p&gt;2）对象：是类的实例化结果，是具体的。&lt;/p&gt;

&lt;p&gt;3）通过标签找对象：document.getElementsByTagName(“标签名”)&lt;/p&gt;

&lt;p&gt;比如：说学生（模糊的抽象的一类），而具体的一个学生就是一个对象。&lt;/p&gt;

&lt;p&gt;4.面向对象三大特点&lt;/p&gt;

&lt;p&gt;1）封装性&lt;/p&gt;

&lt;p&gt;也称为信息隐藏。就是将一个类的使用和实现分开。只保留有限的接口与外部联系。使用者不必关心具体的实现，只知道每个方法的调用方式即可。&lt;/p&gt;

&lt;p&gt;好处：避免了程序之间的依赖性。&lt;/p&gt;

&lt;p&gt;2）继承性&lt;/p&gt;

&lt;p&gt;继承性就是派生类（子类）自动继承父类中的属性和方法，并可以修改或添加新的属性和方法。&lt;/p&gt;

&lt;p&gt;注意：继承分单继承和多继承，php支持的是单继承，一个子类只能有一个父类。&lt;/p&gt;

&lt;p&gt;好处：提高了代码的重用性。&lt;/p&gt;

&lt;p&gt;3）多态性：&lt;/p&gt;

&lt;p&gt;多态即多种形态，具有表现多种形态的能力特征。在面向对象中表示根据对象的类型以不同方式处理（说白了就是调用同一个方法可以获得不同的结果）。&lt;/p&gt;

&lt;p&gt;好处：增强了软件的灵活性。&lt;/p&gt;

&lt;p&gt;5.访问控制&lt;/p&gt;

&lt;p&gt;在属性或方法前面添加关键字 public（公有），protected（受保护）或 private（私有）来实现的。&lt;/p&gt;

&lt;p&gt;公有的类成员可以在任何地方被访问。&lt;/p&gt;

&lt;p&gt;受保护的类成员则可以被其自身以及其子类和父类访问。&lt;/p&gt;

&lt;p&gt;私有的类成员则只能被其定义所在的类访问。&lt;/p&gt;

&lt;p&gt;6.封装&lt;/p&gt;

&lt;p&gt;封装：将数据（属性）以及对数据的操作（方法）捆绑到一起，形成对外的数据隐藏。只对外提供可以调用的接口供其使用。（public的方法和属性）。&lt;/p&gt;

&lt;p&gt;封装的过程称之为抽象：将具有相同特性的一类事务，把公共的内容抽离出来，形成文字描述的过程。&lt;/p&gt;

&lt;p&gt;7.继承&lt;/p&gt;

&lt;p&gt;语法：&lt;/p&gt;

&lt;p&gt;父类：拥有一些可以被继承的属性和方法&lt;/p&gt;

&lt;p&gt;子类：想拥有自己不存在但是在别的类中存在的属性和方法&lt;/p&gt;

&lt;p&gt;关键字：extends&lt;/p&gt;

&lt;p&gt;子类 extends 父类&lt;/p&gt;

&lt;p&gt;继承的优点&lt;/p&gt;

&lt;p&gt;1)便于扩展（子类可以在父类的基础上增加自己的特点）&lt;/p&gt;

&lt;p&gt;2)节省代码：提高代码的复用性&lt;/p&gt;

&lt;p&gt;继承的细节&lt;/p&gt;

&lt;p&gt;①　子类最多只能继承一个父类（指直接继承）&lt;/p&gt;

&lt;p&gt;②　子类可以继承其父类的public,protected修饰的属性和方法。&lt;/p&gt;

&lt;p&gt;③　在创建某个子类对象时，默认情况下不会自动调用其父类的构造函数。&lt;/p&gt;

&lt;p&gt;④　如果在子类中需要访问父类中（以public/protected修饰）的方法，可以使用&lt;/p&gt;

&lt;p&gt;父类：：方法名或者是parent::方法名。&lt;/p&gt;

&lt;p&gt;如果子类（派生类）中的方法和父类（基类）方法相同，我们称之为方法重写/方&lt;/p&gt;

&lt;p&gt;继承：子类可以使用父类的属性和方法（除私有的）。&lt;/p&gt;

&lt;p&gt;8.多态&lt;/p&gt;

&lt;p&gt;多态：多种形态，在存在继承的情况下，子类必须重写父类的方法（子类拥有与父类同名的方法）&lt;/p&gt;

&lt;p&gt;9.使用$this访问方法和属性&lt;/p&gt;

&lt;p&gt;我们学习过，实例化对象后，可以通过对象名来调用类中的属性和方法。&lt;/p&gt;

&lt;p&gt;对象名-&amp;gt;属性名&lt;/p&gt;

&lt;p&gt;对象名-&amp;gt;方法名()&lt;/p&gt;

&lt;p&gt;类的内部如需调用本类的成员属性和成员方法，可借助伪变量$this。&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;属性名&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;方法名()&lt;/p&gt;

&lt;p&gt;原理：当一个对象($a)调用其方法(who())时，该方法执行之前，先完成一个绑定。就是$this绑定到调用该方法的那个对象上。&lt;/p&gt;

&lt;p&gt;10.self与$this的区别&lt;/p&gt;

&lt;p&gt;1)self ：代表本类，自身（不要理解为本类的对象），$this代表对象&lt;/p&gt;

&lt;p&gt;2)self访问类内部的常量和静态成员，$this访问对象的属性和普通方法&lt;/p&gt;

&lt;p&gt;3)self必须配合范围解析操作符（::）才能生效，$this代表对象，对象本来就是一种数据类型，所以$this可以单独被打印。&lt;/p&gt;

&lt;p&gt;4)能用$this的地方，一定可以使用self，但是能使用self的地方不一定可以使用$this&lt;/p&gt;

&lt;p&gt;5)非静态的属性和方法均用对象（$this）访问，静态的方法和属性或常量均用类(self)来访问&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>linux的使用!</title>
   <link href="http://127.0.0.1/naringu/2014/06/12/four/"/>
   <updated>2014-06-12T00:00:00+08:00</updated>
   <id>http://127.0.0.1/naringu/2014/06/12/four</id>
   <content type="html">&lt;p&gt;1.linux命令：&lt;/p&gt;

&lt;p&gt;解压文件：
         tar指令 –zxvf 源码包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;     -zxf 解压参数

     -v  显示进度（一般情况下可以不写）
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装：yum install [-y] [rpm包名]&lt;/p&gt;

&lt;p&gt;卸载：yum remove [-y] [rpm包名]&lt;/p&gt;

&lt;p&gt;升级：yum update [-y] [rpm包]&lt;/p&gt;

&lt;p&gt;新建：Touch 文件名   touch 1.txt&lt;/p&gt;

&lt;p&gt;kill   -杀死方式  进程ID&lt;/p&gt;

&lt;p&gt;复制：Cp 源文件  目标文件    cp -v /home/hehe  ./hehe&lt;/p&gt;

&lt;p&gt;移动：mv 参数 源文件 目标文件   mv -v /home/hehe ./hehe&lt;/p&gt;

&lt;p&gt;删除：rm -rf 文件夹或文件&lt;/p&gt;

&lt;p&gt;查看：find -name   根据文件的名称查找&lt;/p&gt;

&lt;p&gt;管道命令：grep 参数 字符串 源文件&lt;/p&gt;

&lt;p&gt;解压缩： tar -xvf linuxqq.tar.gz&lt;/p&gt;

&lt;p&gt;关机命令：Halt Poweroff Shutdown Reboot&lt;/p&gt;

&lt;p&gt;帮助命令：2.7.1――help man&lt;/p&gt;

&lt;p&gt;2.Vim/Vi文本编辑器应用&lt;/p&gt;

&lt;p&gt;:w ：保存当前文件&lt;/p&gt;

&lt;p&gt;:q（quit）：退出当前文件&lt;/p&gt;

&lt;p&gt;:wq ：保存并退出&lt;/p&gt;

&lt;p&gt;:q! ：强制退出&lt;/p&gt;

&lt;p&gt;:wq! ：强制保存退出&lt;/p&gt;

&lt;p&gt;:set nu ：显示当前文件行号&lt;/p&gt;

&lt;p&gt;:set nonu ：隐藏当前行号&lt;/p&gt;

&lt;p&gt;:noh ：取消高亮显示&lt;/p&gt;

&lt;p&gt;:u ：撤销&lt;/p&gt;

&lt;p&gt;dd ：剪切当前行&lt;/p&gt;

&lt;p&gt;ndd:剪切n行&lt;/p&gt;

&lt;p&gt;yy ：复制当前行&lt;/p&gt;

&lt;p&gt;nyy: 复制n行&lt;/p&gt;

&lt;p&gt;p ：粘贴&lt;/p&gt;

&lt;p&gt;3.vi常用快捷键&lt;/p&gt;

&lt;p&gt;1)移动光标&lt;/p&gt;

&lt;p&gt;h ：光标左移一个字符&lt;/p&gt;

&lt;p&gt;j ：光标上移一个字符&lt;/p&gt;

&lt;p&gt;k ：光标下移一个字符&lt;/p&gt;

&lt;p&gt;l ：光标右移一个字符&lt;/p&gt;

&lt;p&gt;0 ：光标移至行首&lt;/p&gt;

&lt;p&gt;$ ：光标移至行尾&lt;/p&gt;

&lt;p&gt;H ：光标移至屏幕首行&lt;/p&gt;

&lt;p&gt;M ：光标移至屏幕中间&lt;/p&gt;

&lt;p&gt;L ：光标移至屏幕最末行&lt;/p&gt;

&lt;p&gt;2)插入文本&lt;/p&gt;

&lt;p&gt;i ：在光标前插内内容&lt;/p&gt;

&lt;p&gt;a ：在光标后插入内容&lt;/p&gt;

&lt;p&gt;o ：在所在行的下一行插入新行&lt;/p&gt;

&lt;p&gt;O ：在所在行的上一行插入新行&lt;/p&gt;

&lt;p&gt;3)删除文本&lt;/p&gt;

&lt;p&gt;x：删除光标后面的字符&lt;/p&gt;

&lt;p&gt;X：删除光标前面的字符&lt;/p&gt;

&lt;p&gt;nx：删除光标后面n个字符&lt;/p&gt;

&lt;p&gt;nX：删除光标前面的n个字符&lt;/p&gt;

&lt;p&gt;d0：删除光标至行首的内容&lt;/p&gt;

&lt;p&gt;d$：删除光标至行尾的内容&lt;/p&gt;

&lt;p&gt;dd ：删除整行&lt;/p&gt;

&lt;p&gt;ndd ：向下删除n行&lt;/p&gt;

&lt;p&gt;4)复制文本&lt;/p&gt;

&lt;p&gt;yy ：复制整行&lt;/p&gt;

&lt;p&gt;nyy ：复制n行&lt;/p&gt;

&lt;p&gt;p ：在所在行下一行粘贴&lt;/p&gt;

&lt;p&gt;P ：在所在行上一行粘贴&lt;/p&gt;

&lt;p&gt;dd ：剪切&lt;/p&gt;

&lt;p&gt;5)查找文本&lt;/p&gt;

&lt;p&gt;/pattern ：向下查找&lt;/p&gt;

&lt;p&gt;?pattern ：向上查找&lt;/p&gt;

&lt;p&gt;n ：顺序查找&lt;/p&gt;

&lt;p&gt;N ：反向查找&lt;/p&gt;

&lt;p&gt;:s/p1/p2/g ：在当前行，将p1替换成p2&lt;/p&gt;

&lt;p&gt;:n1,n2s/p1/p2/g ：将n1至n2行之间的p1替换成p2&lt;/p&gt;

&lt;p&gt;6)屏幕翻滚&lt;/p&gt;

&lt;p&gt;ctrl+u：向文件首翻半屏&lt;/p&gt;

&lt;p&gt;ctrl+d：向文件尾翻半屏&lt;/p&gt;

&lt;p&gt;ctrl+f：向文件尾翻一屏&lt;/p&gt;

&lt;p&gt;ctrl+b：向文件首翻一屏&lt;/p&gt;

&lt;p&gt;4.scp 远程文件管理（Linux对Linux）&lt;/p&gt;

&lt;p&gt;scp 本地文件 远程文件  ： 上传文件
scp test.php root@192.168.1.18:/root/&lt;/p&gt;

&lt;p&gt;scp 远程文件 本地文件  ： 下载文件
scp root@192.168.1.20:/root/tian.php /root/&lt;/p&gt;

&lt;p&gt;scp –r 文件夹 文件夹
scp -r root@192.168.1.20:/root/won /root/won22&lt;/p&gt;

&lt;p&gt;5.LAMP环境搭建及管理和lnmp搭建及管理&lt;/p&gt;

&lt;p&gt;可参考&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/zph1234/article/details/51250523&quot;&gt;http://blog.csdn.net/zph1234/article/details/51250523&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/zph1234/article/details/51248124&quot;&gt;http://blog.csdn.net/zph1234/article/details/51248124&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;6.SVN安装
21.2(1)掌握SVN的安装
yum install subversion
(2)掌握SVN版本库的创建
svnadmin create 版本库的路径
svnadmin create /usr/local/svn/sunny
(3)掌握SVN的配置
1)掌握配置文件的目录当前版本库的conf目录下
2)掌握配置版本库信息和用户文件和用户密码文件的路径、版本库路径
① # anon-access = read
②# auth-access = write
③# password-db = passwd
④将以上三行的注释去掉
3)掌握创建svn组和组用户的权限
①[group]
sunny = gep,wce //创建一个sunny的组，并指定两个用户gep和wce
②[/]             //制定根目录下的权限
@sunny = rw     //sunny组用户权限为读写
* = r           //其他用户只有读权限
③保存退出
4)掌握创建或修改用户密码
	①[users]
gep = 123456    //用户名为gep的用户的密码为123456
wce = 123456    //。。。
②保存退出
(4)掌握SVN的启动
1)掌握多版本库启动svnserve -d -r 版本库目录
2)掌握单版本启动   svnserve -d -r 版本库目录/版本库名
(5)掌握SVN的自动启动
1)vi /etc/rc.local    打开自启动文件添加
2)/usr/bin/svnserve -d -r /usr/local/svn/
(6)掌握SVN的自动更新
1)在vi /版本库目录/hooks/post-commit中加入
2)#!/bin/sh
3)#设置一些变量
4)SVN=/usr/bin/svn
5)WEB=/data0/htdocs/ecshop #要更新的目录
6)export LANG=en_US.UTF-8
7)$SVN update $WEB –username wsss –password 123
(7)掌握SVN命令方式检出
Svn checkout 版本库的路径 检出的路径
(8)掌握SVN客户端检出
&lt;img src=&quot;/../images/img1.png&quot; alt=&quot;cookie&quot; /&gt;
(9)SVN对比工具(beyondCompare)&lt;/p&gt;

&lt;p&gt;1)”C:\Program Files (x86)\Beyond Compare 3\BComp.exe” %base %mine /title1=%bname /title2=%yname /leftreadonly&lt;/p&gt;

&lt;p&gt;2)”C:\Program Files (x86)\Beyond Compare 3\BCompare.exe”
&lt;img src=&quot;/../images/img2.png&quot; alt=&quot;cookie&quot; /&gt;
“C:\Program Files (x86)\Beyond Compare 3\BComp.exe” %mine %theirs %base %merged /title1=%yname /title2=%tname /title3=%bname /title4=%mname
&lt;img src=&quot;/../images/img3.png&quot; alt=&quot;cookie&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>jquery的使用!</title>
   <link href="http://127.0.0.1/naringu/2014/06/12/five/"/>
   <updated>2014-06-12T00:00:00+08:00</updated>
   <id>http://127.0.0.1/naringu/2014/06/12/five</id>
   <content type="html">&lt;p&gt;1.什么是jquery？&lt;/p&gt;

&lt;p&gt;一款免费且开放源代码的JavaScript代码库&lt;/p&gt;

&lt;p&gt;2.什么是JavaScript代码库&lt;/p&gt;

&lt;p&gt;Prototype框架（代码库），是成型比较早的Javascript代码库，面向对象的思想不完善且整个代码比较松散。&lt;/p&gt;

&lt;p&gt;Dojo框架，Dojo框架具有很多框架不具有的功能，比如离线存储等，其核心代码比较精简，但是其门槛较高且文档不全，版本不稳定。&lt;/p&gt;

&lt;p&gt;Mootools框架，整个框架核心代码只有8k，完整版也只有100多k，所以代码非常精简，对于面向对象的支持非常完善。&lt;/p&gt;

&lt;p&gt;ExtJS框架，通过Javascript可以编写富媒体，本身界面非常的美化，非常炫，但是其比较耗资源，而且其是收费的。&lt;/p&gt;

&lt;p&gt;jQuery框架（2006年，Javascript专家-美国人约翰特里），以其强大的DOM框架、Ajax封装等一些功能为所有程序员所推崇。&lt;/p&gt;

&lt;p&gt;3.基本选择器&lt;/p&gt;

&lt;h1 id=&quot;id-id&quot;&gt;id ：通过元素的id属性，匹配元素&lt;/h1&gt;

&lt;p&gt;Element ：通过元素名称，匹配元素&lt;/p&gt;

&lt;p&gt;selector1,selector2 ：同时匹配多个选择器&lt;/p&gt;

&lt;p&gt;.class ：通过元素的class属性，匹配元素&lt;/p&gt;

&lt;p&gt;4.层次选择器&lt;/p&gt;

&lt;p&gt;ancetor descendant ：选取ancetor元素下的所有后代元素(所有父子孙元素…)&lt;/p&gt;

&lt;p&gt;parent &amp;gt; child ：选取parent下的子元素(父子关系)&lt;/p&gt;

&lt;p&gt;prev + next ：选取prev元素的相邻的下一个元素（同级）&lt;/p&gt;

&lt;p&gt;prev~siblings ：选取prev元素的后面所有同级元素&lt;/p&gt;

&lt;p&gt;5.简单选择器&lt;/p&gt;

&lt;p&gt;:first ：选择第一个元素&lt;/p&gt;

&lt;p&gt;:last ：选取最后一个元素&lt;/p&gt;

&lt;p&gt;:even ：偶数  索引的值   索引从0开始&lt;/p&gt;

&lt;p&gt;:odd  ：奇数&lt;/p&gt;

&lt;p&gt;:eq(索引) ：选取索引为index的元素，默认从0开始&lt;/p&gt;

&lt;p&gt;:gt(index) ：选择索引大于index的元素，默认从0开始&lt;/p&gt;

&lt;p&gt;:lt(index) ：选取索引小于index的元素，默认从0开始&lt;/p&gt;

&lt;p&gt;:not(selector) ：选择选择器不为selector的元素&lt;/p&gt;

&lt;p&gt;6.内容选择器&lt;/p&gt;

&lt;p&gt;:contains(text) ：匹配元素内容包含text文本的元素&lt;/p&gt;

&lt;p&gt;:empty ：匹配元素内容为空的元素&lt;/p&gt;

&lt;p&gt;:has(selector) ：匹配具有元素的元素&lt;/p&gt;

&lt;p&gt;:parent ：匹配内容不为空的元素&lt;/p&gt;

&lt;p&gt;7.可见性选择器&lt;/p&gt;

&lt;p&gt;:hidden ：匹配所有隐藏元素（display:none与type=hidden）&lt;/p&gt;

&lt;p&gt;:visible ：匹配所有可见元素&lt;/p&gt;

&lt;p&gt;8.属性选择器&lt;/p&gt;

&lt;p&gt;[attribute] ：匹配具有某一属性的元素&lt;/p&gt;

&lt;p&gt;[attribute=value] ：匹配属性值等于value的元素&lt;/p&gt;

&lt;p&gt;[attribute!=value] ：匹配属性值不等于value的元素&lt;/p&gt;

&lt;p&gt;[attribute^=value] ：匹配属性值以value开始的元素&lt;/p&gt;

&lt;p&gt;[attribute$=value] ：匹配属性值以value结尾的元素&lt;/p&gt;

&lt;p&gt;[attribute*=value] ：匹配属性值包含value的元素&lt;/p&gt;

&lt;p&gt;[selector1][selector2][selectorN] ：匹配具有多个指定属性的元素&lt;/p&gt;

&lt;p&gt;9.子元素选择器&lt;/p&gt;

&lt;p&gt;nth-child(index/even/odd) 从1算起 ：匹配满足条件（索引，偶数，奇数）子元素&lt;/p&gt;

&lt;p&gt;:first-child ：选取第一个子元素&lt;/p&gt;

&lt;p&gt;:last-child ：选取最后一个子元素&lt;/p&gt;

&lt;p&gt;:only-child ：选取子元素且该子元素是唯一的子元素，则匹配&lt;/p&gt;

&lt;p&gt;10.表单选择器&lt;/p&gt;

&lt;p&gt;:input ：匹配所有表单元素（包含select、textarea）&lt;/p&gt;

&lt;p&gt;:text 	：匹配所有text文本框&lt;/p&gt;

&lt;p&gt;:password ：匹配所有密码框&lt;/p&gt;

&lt;p&gt;:radio	：匹配所有单选&lt;/p&gt;

&lt;p&gt;:checkbox ：匹配所有复选框&lt;/p&gt;

&lt;p&gt;:submit ：匹配所有提交按钮&lt;/p&gt;

&lt;p&gt;:reset ：匹配所有重置按钮&lt;/p&gt;

&lt;p&gt;:image ：匹配所有图像域&lt;/p&gt;

&lt;p&gt;:button ：匹配所有button按钮（type=’button’或button标签）&lt;/p&gt;

&lt;p&gt;:file ：匹配所有文件域&lt;/p&gt;

&lt;p&gt;:hidden ：匹配所有隐藏表单&lt;/p&gt;

&lt;p&gt;11.表单对象属性选择器&lt;/p&gt;

&lt;p&gt;:enabled ：选取所有可用表单&lt;/p&gt;

&lt;p&gt;:disabled ：选取所有不可用表单&lt;/p&gt;

&lt;p&gt;:checked ：选取所有选中的表单元素（单选框与复选框）&lt;/p&gt;

&lt;p&gt;:selected ：选取被选中的下拉选框（下拉）&lt;/p&gt;

&lt;p&gt;12.属性&lt;/p&gt;

&lt;p&gt;attr(name) ：获取元素的属性值&lt;/p&gt;

&lt;p&gt;attr(key,value) ：设置元素的属性的值&lt;/p&gt;

&lt;p&gt;attr(properties) ：一次为元素设置多个属性，要求参数是一个json对象&lt;/p&gt;

&lt;p&gt;attr(key,fn) ：通过函数的返回值设置元素的属性&lt;/p&gt;

&lt;p&gt;removeAttr(name) ：移除元素的属性&lt;/p&gt;

&lt;p&gt;13.class操作&lt;/p&gt;

&lt;p&gt;addClass(class) ：为元素添加class样式&lt;/p&gt;

&lt;p&gt;removeClass(class) ：为元素移除class样式&lt;/p&gt;

&lt;p&gt;toggleClass(class) ：切换样式，当元素拥有class样式则移除，否则，即添加&lt;/p&gt;

&lt;p&gt;hasClass(class) ：判断当前元素是否具有class样式&lt;/p&gt;

&lt;p&gt;14.html/text/val&lt;/p&gt;

&lt;p&gt;html() ：获取元素的值（主要针对的是双标签元素）&lt;/p&gt;

&lt;p&gt;html(val) ：设置元素的值&lt;/p&gt;

&lt;p&gt;val() ：获取表单元素的value值（主要针对的是表单元素）&lt;/p&gt;

&lt;p&gt;val(val) ：设置表单元素的value值&lt;/p&gt;

&lt;p&gt;text() ：获取元素的值&lt;/p&gt;

&lt;p&gt;text(val) ：设置元素的值&lt;/p&gt;

&lt;p&gt;说明：
html()与text()方法区别
在获取时，如果是普通文本信息，两者效果一致，如元素中包含子元素，那么html方法可以获取到所有的子元素及文本信息，而text()方法只能获取文本信息。
在设置时，如果是普通文本信息，两者效果一致，如果设置的值中包含标签，那么html方法可以进行解析执行，而text方法不能解析html代码，会当做普通文本处理。&lt;/p&gt;

&lt;p&gt;15.css操作&lt;/p&gt;

&lt;p&gt;css(name) ：获取元素的css的值&lt;/p&gt;

&lt;p&gt;css(name,value) ：设置元素的css的值&lt;/p&gt;

&lt;p&gt;css(properties) ：一次为元素设置多个css的值，要求参数为json对象&lt;/p&gt;

&lt;p&gt;16.尺寸操作&lt;/p&gt;

&lt;p&gt;width() ：获取元素的宽度&lt;/p&gt;

&lt;p&gt;width(value) ：设置元素的宽度&lt;/p&gt;

&lt;p&gt;height() ：获取元素的高度&lt;/p&gt;

&lt;p&gt;height(value) ：设置元素的高度&lt;/p&gt;

&lt;p&gt;17.基本事件&lt;/p&gt;

&lt;p&gt;blur(fn) ：当失去焦点时触发&lt;/p&gt;

&lt;p&gt;change(fn) ：当状态改变时触发&lt;/p&gt;

&lt;p&gt;click(fn) ：单击时触发&lt;/p&gt;

&lt;p&gt;dblclick(fn) ：双击时触发&lt;/p&gt;

&lt;p&gt;focus(fn) ：获取焦点时触发&lt;/p&gt;

&lt;p&gt;keydown(fn) ：键盘按下时触发&lt;/p&gt;

&lt;p&gt;keyup(fn) ：键盘弹起时触发&lt;/p&gt;

&lt;p&gt;keypress(fn) ：键盘按下时触发&lt;/p&gt;

&lt;p&gt;load(fn) ：页面载入时触发&lt;/p&gt;

&lt;p&gt;unload(fn) ：页面卸载（关闭）时触发&lt;/p&gt;

&lt;p&gt;mousedown(fn) ：鼠标按下时触发&lt;/p&gt;

&lt;p&gt;mouseup(fn) ：鼠标弹起时触发&lt;/p&gt;

&lt;p&gt;mousemove(fn) ：鼠标移动时触发&lt;/p&gt;

&lt;p&gt;mouseover(fn) ：鼠标悬浮时触发&lt;/p&gt;

&lt;p&gt;mouseout(fn) ：鼠标离开时触发&lt;/p&gt;

&lt;p&gt;resize(fn) ：大小改变时触发&lt;/p&gt;

&lt;p&gt;scroll(fn) ：滚动时触发&lt;/p&gt;

&lt;p&gt;select(fn) ：选中时触发&lt;/p&gt;

&lt;p&gt;submit(fn) ：表单提交时触发&lt;/p&gt;

&lt;p&gt;18.事件切换&lt;/p&gt;

&lt;p&gt;hover(over,out) ：鼠标悬浮与鼠标离开事件，第一个参数为over事件处理程序，第二个参数为out事件处理程序&lt;/p&gt;

&lt;p&gt;toggle(fn,fn) ：点击事件切换，可以有多个参数&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>javascript!</title>
   <link href="http://127.0.0.1/naringu/2014/04/09/two/"/>
   <updated>2014-04-09T00:00:00+08:00</updated>
   <id>http://127.0.0.1/naringu/2014/04/09/two</id>
   <content type="html">&lt;p&gt;1.什么是javascript？它的特点是什么？它的作用是什么？
定义：javascript是一门客户端的脚本语言，可以嵌套到html里面，浏览器能直接解析。&lt;/p&gt;

&lt;p&gt;特点：&lt;/p&gt;

&lt;p&gt;1)javaScript是一种基于对象和事件驱动并具有安全性能的脚本语言   基于对象和事件驱动并具有安全性能的脚本语言。&lt;/p&gt;

&lt;p&gt;2)js代码自上而下执行，和php代码执行顺序一致。&lt;/p&gt;

&lt;p&gt;3)js中的代码严格区分大小写。&lt;/p&gt;

&lt;p&gt;4)每行结尾的分号可有可无。&lt;/p&gt;

&lt;p&gt;作用：制作网页特效、实现表单验证、增加浏览器与用户交互的动态效果&lt;/p&gt;

&lt;p&gt;2.javascript中的事件的分类
鼠标事件
1)onclick(鼠标点击事件)
2)onmouseover(属性在鼠标指针移动到元素上时触发)
3)onmouseout(属性在鼠标指针移动到元素外时触发)
4)onmousemove(属性在鼠标指针移动到元素上时触发)
键盘事件
1)onkeydown(事件会在用户按下一个键盘按键时发生)&lt;/p&gt;

&lt;p&gt;2)onkeyup(事件会在键盘按键被松开时发生)&lt;/p&gt;

&lt;p&gt;表单事件&lt;/p&gt;

&lt;p&gt;1)onblur(失去焦点时间)&lt;/p&gt;

&lt;p&gt;2)onsubmit(事件会在表单中的确认按钮被点击时发生)&lt;/p&gt;

&lt;p&gt;3)onchange(事件会在域的内容改变时发生)&lt;/p&gt;

&lt;p&gt;Window.onload(页面加载事件)&lt;/p&gt;

&lt;p&gt;3.DOM编程的基本找对象方法&lt;/p&gt;

&lt;p&gt;1）通过id找对象：document.getElementById(“元素id”)&lt;/p&gt;

&lt;p&gt;2）通过name找对象：document.getElementsByName(“元素name”)&lt;/p&gt;

&lt;p&gt;3）通过标签找对象：document.getElementsByTagName(“标签名”)&lt;/p&gt;

&lt;p&gt;4.DOM的基本属性&lt;/p&gt;

&lt;p&gt;1）innerHTML属性：找到或设置双标签间的值&lt;/p&gt;

&lt;p&gt;2）value属性：找到或设置表单中带有value属性的值&lt;/p&gt;

&lt;p&gt;3）innerText属性：找到或设置双标签间的值&lt;/p&gt;

&lt;p&gt;注解：&lt;/p&gt;

&lt;p&gt;nnerText和innerHTML的区别：在获取双标签间的值得时候，innerText是剥除html标签，只有文本内容，而innerHTML是带有html标签的。&lt;/p&gt;

&lt;p&gt;5.正则表达式的匹配符&lt;/p&gt;

&lt;p&gt;模式匹配符：&lt;/p&gt;

&lt;p&gt;\：转义字符  例如：\b转义了b&lt;/p&gt;

&lt;p&gt;^：正则表达式开始符号&lt;/p&gt;

&lt;p&gt;$：正则表达式结束符号&lt;/p&gt;

&lt;p&gt;*：匹配前面的字符出现0次或者n次&lt;/p&gt;

&lt;p&gt;+：匹配前面的字符出现1次或者n次&lt;/p&gt;

&lt;p&gt;?：匹配前面的字符出现0次或者1次&lt;/p&gt;

&lt;p&gt;.：匹配除了换行符以外的所有单个字符&lt;/p&gt;

&lt;p&gt;{n}：匹配前面的n个字符&lt;/p&gt;

&lt;p&gt;{n,m}：匹配至少n个最多m个前面字符&lt;/p&gt;

&lt;p&gt;[xyz]：匹配中括号里的任意一个字符&lt;/p&gt;

&lt;p&gt;[^xyz]：匹配除了中括号里的任意一个字符&lt;/p&gt;

&lt;p&gt;\w：匹配任意一个数字或字母或下划线 等价于					[A-Za-z0-9_]&lt;/p&gt;

&lt;p&gt;\d：匹配任意一个0–9之间的数字&lt;/p&gt;

&lt;p&gt;模式修正符：i：忽略大小写&lt;/p&gt;

&lt;p&gt;正则检测字符串函数：test()，成功返回true，失败返回false
       例如：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;       &lt;span class=&quot;no&quot;&gt;Var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zhangsan&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;no&quot;&gt;Var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^\w+$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;no&quot;&gt;If&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;
   		 &lt;span class=&quot;no&quot;&gt;Alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;“用户名合法”&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;pre&gt;&lt;code&gt;   常用正则表达式举例：

     //用户名由6-18位的字母数字下划线组成，不能由数字开头

     var r_name=/^[a-z_]\w{5,17}$/i

     //密码长度不能少于六位

     var r_pwd=/^\w{6,}$/

     //所有的通用邮箱地址

     var r_eamil=/^\w+@\w+(\.)\w+$/

     //匹配一个QQ邮箱地址

     //861745122@qq.com

     var r_qq_email=/^\d{5,}@qq(\.)com$/

     //匹配一个163的邮箱地址

     var r_163_email=/^\w+@163(\.)com$/

     //匹配一个后缀名可能是.com|.net|.cn|.edu

     var email=/^\w+@\w+(\.)com|net|cn|edu$/

    //要求输入有效的年龄段

    var r_age=/^\d{1,2}$/

    //if(age&amp;gt;=18&amp;amp;&amp;amp;age&amp;lt;=100)

    //验证手机号:11位  13 15 18开头

    var r_tel=/^1[3,5,8]\d{9}$/

     //验证身份证号  18位或者17位加一个X

   var r_s=/^\d{18}|\d{17}x$/i

    //验证中文

   var reg=/^[\u4e00-\u9fa5]{2,17}$/
&lt;/code&gt;&lt;/pre&gt;

   	      //php中文

&lt;pre&gt;&lt;code&gt;    $reg = “/^[\x{4e00}-\x{9fa5}]$/u”
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;6.深入理解客户端验证和服务器端验证表单信息的区别&lt;/p&gt;

   	客户端的验证也就是js验证，只是为了提高用户的体验，

   	在表单提交到服务器端之前做客户端信息的有效性验证。客户端的js很容易被用户禁止掉，

   	如果客户端禁止了js，那么验证也就失效了，用户照样还可以提交非法数据。

   	所以，保证入库数据的合法性和有效性必须采用服务器端php验证和客户端js验证结合的方式进行，

   	服务器端的验证增加了验证的安全性和数据的合法性及有效性，为数据入库做了很好的铺垫，

   	让数据库更准确的得到客户端的数据。

&lt;p&gt;7.多文件上传&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vg&quot;&gt;$files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$_FILES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;goods_pic&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;vg&quot;&gt;$num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;vg&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;vg&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pathinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;extension&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])){&lt;/span&gt;
                &lt;span class=&quot;vg&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniqid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;.&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;extension&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;   &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;重新设置名字&lt;/span&gt;
                &lt;span class=&quot;vg&quot;&gt;$lin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;tmp_name&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;move_uploaded_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$lin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ROOT_DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;/images/&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;vg&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ROOT_DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;/images/&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;vg&quot;&gt;$ctrlfile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str_replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;\\&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;vg&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$ctrlfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;vg&quot;&gt;$img&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print_r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;die&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;8.实现分页步骤&lt;/p&gt;

&lt;p&gt;第一步：查询出参与分页数据的总记录数&lt;/p&gt;

&lt;p&gt;第二步：设定每页显示多少条数据&lt;/p&gt;

&lt;p&gt;第三步：计算出总页数：ceil（总记录数/每页显示的条数）&lt;/p&gt;

&lt;p&gt;第四步：获取当前页：$page=$_GET[‘page’]?$_GET[‘page’]:1;&lt;/p&gt;

&lt;p&gt;第五步：计算偏移量：(当前页-1)*每页显示的条数&lt;/p&gt;

&lt;p&gt;第六步：查询数据：select * from 表名 limit 偏移量,每页显示的条数&lt;/p&gt;

&lt;p&gt;第七步：输出上一页、下一页、首页、尾页的超链接&lt;/p&gt;

&lt;p&gt;9.ajax技术的概念，ajax的优缺点及应用场景&lt;/p&gt;

&lt;p&gt;1)定义：ajax是一种技术，是由div+css javascript和xml技术组成&lt;/p&gt;

&lt;p&gt;2)作用：异步存取，局部刷新，能实现无页面刷新的效果&lt;/p&gt;

&lt;p&gt;3)Ajax优点：可以减轻服务器处理数据的压力，实现无页面刷新，增   强用户体验&lt;/p&gt;

&lt;p&gt;4)Ajax缺点：不利于SEO（搜索引擎）优化&lt;/p&gt;

&lt;p&gt;5)Ajax应用场景：在页面显示大量数据，实时更新的网站上，实现局部刷新，与后台服务器及时交互&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>php第一月总结!</title>
   <link href="http://127.0.0.1/naringu/2014/03/18/one/"/>
   <updated>2014-03-18T00:00:00+08:00</updated>
   <id>http://127.0.0.1/naringu/2014/03/18/one</id>
   <content type="html">&lt;p&gt;1.session
运用session时，首先要Session_Start();开启session
存session：$_SESSION[“name”]=”value”;
取session：echo $_SESSION[“name”];
销毁session：session_destroy();&lt;/p&gt;

&lt;p&gt;2.cookie
setcookie(“UserName”,”zs”,time()+2&lt;em&gt;7&lt;/em&gt;24*3600);
第一个参数为键名，第二个参数为值，第三个参数为过期时间
去cookie值：$_COOKIE[‘UserName’];
删除一个cookie：setcookie(‘UserName’, NULL);&lt;/p&gt;

&lt;p&gt;3.pdo
使用pdo时要开启pdo扩展。
什么是pdo？
PDO：PHP data object，php数据对象，也叫php数据抽象层，是一种能够管理多种不同数据库的数据对
象，PHP只需要去调用PDO，而不用去在意PDO底层管理的数据库到底是采用什么样的方式，哪些方法来实
现的功能。让PHP操作数据库变得简单。
使用：$pdo=new PDO(‘mysql:host=127.0.0.1;dbname=hehe’,’root’,’root’);
三个参数
	$dsn：数据库类型:host=主机地址;port=端口号;dbname=数据库
	$user：用户名
	$pass：密码
必须区分SQL语句到底是什么操作：写操作使用exec，读操作使用query
例如：$pdo-&amp;gt;query(‘select * from login’)-&amp;gt;fetchAll(PDO::FETCH_ASSOC)；
      $pdo-&amp;gt;exec(‘delete from login’);&lt;/p&gt;

&lt;p&gt;4.mysqli	
$mysqli = mysqli_connect($cfg_dbhost,$cfg_dbuser,$cfg_dbpwd,$cfg_dbname);
四个参数
	$cfg_dbhost：127.0.0.1
	$cfg_dbuser：用户名
	$cfg_dbpwd：密码
	$cfg_dbname: 数据库
mysqli_query($mysqli,”set names utf8”);
例如：$sql = “select * from test”;
 $res = mysqli_query($mysqli,$sql);
$row=mysqli_fetch_array($res);
print_r($row);  	//这会是一个二维数组&lt;/p&gt;

&lt;p&gt;5.搜索高量显示
搜索一个关键字，并且把关键字标红
例如：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vg&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;blue,red,green,yellow&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str_replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;font color=&#39;red&#39;&amp;gt;red&amp;lt;/font&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;结果为red是高亮显示&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>jeykll + github 发博客!</title>
   <link href="http://127.0.0.1/naringu/2014/02/21/hahah/"/>
   <updated>2014-02-21T00:00:00+08:00</updated>
   <id>http://127.0.0.1/naringu/2014/02/21/hahah</id>
   <content type="html">&lt;ol&gt;
  &lt;li&gt;首先你要在github上创建一个版本库
名字必须和版本库的名字相同&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;接下来安装ruby
&lt;a href=&quot;http://rubyinstaller.org/&quot;&gt;http://rubyinstaller.org/&lt;/a&gt;
下载完之后要配置环境变量&lt;/p&gt;

    &lt;p&gt;在windows中配置环境变量&lt;/p&gt;

    &lt;p&gt;RUBY_HOME=rubyinstaller_dir （实际的ruby所在路径）&lt;/p&gt;

    &lt;p&gt;在path中添加 %RUBY_HOME%\bin
在命令行下运行 ruby –version，如果显示ruby版本信息说明安装正常。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;接下来我们在安装RubyGems&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;https://rubygems.org/pages/download&lt;/p&gt;

&lt;p&gt;下载完到本地之后用终端输入&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;那么到现在RubyGems就安装成功啦&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;接下来我们在安装jekyll
打开终端 输入&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;检查一下是否安装成功。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;成功的话就会显示jekyll版本号。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;目前为止，我们已经安装完ruby RubyGems jekyll ，接下来要可以新建一个本地博客啦！！！&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myblog&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;输入该命令之后，你的文件夹里面就会生成一个叫myblog的文件夹。myblog可以随便换成你喜欢的名字，比如你想建一个新的博客叫Winter，那你就输入 kekyll new Winter ，以此类推。
进入myblog文件夹 cd myblog
里面就会有这些文件。&lt;/p&gt;

&lt;p&gt;在_posts文件夹里写你的博客，命名规范必须和里面自带的一致 比如：2016-10-27-XXXXX.markdown&lt;/p&gt;

&lt;p&gt;打开命令框输入&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serve&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;然后系统会告诉你本地网站已经搭建好了，在浏览器里面输入localhost:4000就能看到你刚刚建立好的最基本jekyll网站啦！&lt;/p&gt;

&lt;p&gt;*注意！在本地测试时jekyll serve 命令框不能关闭！！！&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;把本地文件推送到之前创建好的github中，怎么推送就不细说了，推送成功之后在浏览器里面输入XXXX.github.io 你写的博客就会显示出来！
每次在本地_posts中写完之后都得推送到github版本库中。。。。。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;至此！你的ZB博客就出来了。&lt;/p&gt;
</content>
 </entry>
 

</feed>
